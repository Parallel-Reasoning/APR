[project]
name = "apr"
version = "0.1.0"
description = "APR (Adaptive Parallel Reasoning)"
requires-python = ">=3.10"
dependencies = [
    "numpy",
    "transformers",
    "tqdm",
    "datasets",
    "huggingface-hub",
    "litellm",
    "termcolor",
    "sglang[all]>=0.5.0rc2",
    "torch",
    "hydra-core",
    "wandb",
]

[project.scripts]
test = "pytest:main"
tests = "pytest:main"

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "black",
    "flake8",
]
test = [
    "pytest>=8.0.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
]

[tool.setuptools.packages.find]
where = ["."]
include = ["src*"]

[tool.setuptools.package-dir]
"" = "."

[tool.uv.workspace]
members = [
    ".",
]

[tool.uv.sources]
apr = { workspace = true }

[dependency-groups]
dev = [
    "apr",
]

[tool.pytest.ini_options]
minversion = "7.2"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-ra",
    "--strict-markers",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=0",  # Set to 80 once tests are written
    "-v",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow tests",
]
filterwarnings = [
    "ignore::DeprecationWarning",
]

[tool.coverage.run]
source = ["src"]
branch = true
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/test_*.py",
    "*/*_test.py",
    "*/conftest.py",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"

[tool.coverage.xml]
output = "coverage.xml"
